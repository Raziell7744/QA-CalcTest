#!/usr/bin/perl
## Initially generated by Win32-GuiTest Recorder (v1.03)

## Pragmas/Directives
use strict;
use warnings;

## Imports
use Win32::GuiTest qw/:ALL/;

$Win32::GuiTest::debug = 0;    # Set to "1" to enable debug output.

## Variables/Constants
my $fgWindow = 0;              # Foreground Window

## Main/Core
# Open calculator
system('"C:\Windows\System32\calc.exe"');
sleep(1);

# Focus to calculator window
#my@arr;
#@arr=FindWindowLike(undef,'Calculator');
#SetForegroundWindow($arr[0]);
#SetFocus($arr[0]);

# Reading from data file
my $datafile = '.\input.txt';
open( my $df, '<:encoding(UTF-8)', $datafile )
  or die "Could not open file '$datafile' $!";

my $index = 1;

while ( my $row = <$df> ) {

    # Reset Date Screen - BeforeEach
    # Alt -> V -> B to change to basic
    SendRawKey( VK_LMENU, KEYEVENTF_EXTENDEDKEY );
    SendRawKey( VK_LMENU, KEYEVENTF_EXTENDEDKEY | KEYEVENTF_KEYUP );
    select( undef, undef, undef, 1 );
    SendKeys('v');
    select( undef, undef, undef, 1 );
    SendKeys('b');
    select( undef, undef, undef, 1 );

    # Ctrl + E to change to date calc
    SendRawKey( VK_LCONTROL, KEYEVENTF_EXTENDEDKEY );
    select( undef, undef, undef, 0.33 );
    SendKeys('e');
    select( undef, undef, undef, 0.27 );
    SendRawKey( VK_LCONTROL, KEYEVENTF_EXTENDEDKEY | KEYEVENTF_KEYUP );

    #TAB to move to choose date mode
    SendKeys('{TAB}');
    select( undef, undef, undef, 1 );

    print "Test Case ", $index, ": ";
    $index++;

    # Input Test Params
    chomp $row;
    for my $char ( split //, $row ) {
        if ( $char eq ' ' ) {
        }
        elsif ( $char eq 'R' ) {
            SendKeys('{RIG}');    # Right
            select( undef, undef, undef, 1 );
            print "/";
        }
        elsif ( $char eq 'T' ) {
            SendKeys('{TAB}');
            select( undef, undef, undef, 1 );
            print " -> ";
        }
        elsif ( $char eq 'E' ) {
            SendKeys('{ENT}');    # Enter
            select( undef, undef, undef, 1 );
            print " CALC \n";
        }
        else {
            SendKeys("{$char}");
            print $char;
        }
    }

    # Get Output from Window
    # TODO
    # Assert against Expected Results
    # TODO
}

# #reading from data file
# my $datafile = '.\data.txt';
# open(my $df, '<:encoding(UTF-8)', $datafile)
# 	or die "Could not open file '$datafile' $!";

# #my$char;
# my $num;
# while (my $row = <$df>) {
#  	chomp $row;
# 	if ($row eq 'calc'){
# 		SendKeys('{ENT}'); #ENTER
# 		select(undef, undef, undef, 1);
# 	}
# 	elsif($row eq 'tab'){
# 		SendKeys('{TAB}');
# 		select(undef, undef, undef, 1);
# 	}
# 	else
# 	{
# 		for my $char (split //, $row) {
# 			SendKeys("{$char}");
# 		}
# 		#moving right
# 		SendKeys('{RIG}');
# 		select(undef, undef, undef, 1);
# 	}
# }

## Subroutines
